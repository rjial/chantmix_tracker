/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as NewIndexRouteImport } from './routes/new/index'
import { Route as NewIdRouteImport } from './routes/new/$id'
import { Route as ChantIdRouteImport } from './routes/chant/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewIndexRoute = NewIndexRouteImport.update({
  id: '/new/',
  path: '/new/',
  getParentRoute: () => rootRouteImport,
} as any)
const NewIdRoute = NewIdRouteImport.update({
  id: '/new/$id',
  path: '/new/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const ChantIdRoute = ChantIdRouteImport.update({
  id: '/chant/$id',
  path: '/chant/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chant/$id': typeof ChantIdRoute
  '/new/$id': typeof NewIdRoute
  '/new': typeof NewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chant/$id': typeof ChantIdRoute
  '/new/$id': typeof NewIdRoute
  '/new': typeof NewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chant/$id': typeof ChantIdRoute
  '/new/$id': typeof NewIdRoute
  '/new/': typeof NewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/chant/$id' | '/new/$id' | '/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/chant/$id' | '/new/$id' | '/new'
  id: '__root__' | '/' | '/chant/$id' | '/new/$id' | '/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChantIdRoute: typeof ChantIdRoute
  NewIdRoute: typeof NewIdRoute
  NewIndexRoute: typeof NewIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new/': {
      id: '/new/'
      path: '/new'
      fullPath: '/new'
      preLoaderRoute: typeof NewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/new/$id': {
      id: '/new/$id'
      path: '/new/$id'
      fullPath: '/new/$id'
      preLoaderRoute: typeof NewIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chant/$id': {
      id: '/chant/$id'
      path: '/chant/$id'
      fullPath: '/chant/$id'
      preLoaderRoute: typeof ChantIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChantIdRoute: ChantIdRoute,
  NewIdRoute: NewIdRoute,
  NewIndexRoute: NewIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
